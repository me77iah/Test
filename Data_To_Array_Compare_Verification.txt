	public void testMain(Object[] args) 
	{
		
//		//------------------------------------------------------------------------------------------						
//		// Test Data
//		String sVehicleType = "Car";//
//		String sVehicleReg = "WU61ZNE";// 
//		// Test Data
//		//------------------------------------------------------------------------------------------						
//		//------------------------------------------------------------------------------------------  
//		// Test Data
//		String sVehicleMake = "MAZDA";
//		String sVehicleModel = "2 SPORT D";
//		String sVehicleAbicode = "31539101";
//		String sVehicleRegYear = "2011";
//		String sVehicleNumberofDoors = "5";
//		String sVehicleDoorPlan = "5 DOOR HATCHBACK";
//		String sVehicleTransmissionType = "MANUAL";
//		String sVehicleEngineSize = "1560 CC";
//		String sRegistration_Value = "WU61ZNE";
//		String sVendorPostcode = "PO1 1DF";
//		// Test Data
//		//------------------------------------------------------------------------------------------  
//		// Debug Test Data Start   ************ COMMENT I AND OUT AS REQUIRED **********		
//		String sTitle = "Miss";
//		String sForename = "Donald";
//		String sSurname = "MacRonald";
//		String sHouseNumber = "1";
//		String sPostcode = "PO12 1LQ";		
//		String sPhoneNumber = "02392112233";
//		String sEmail = "donmacr@macdonalds.com";		
//		String sVendorName = "BAE";
//		String sVendorPhone = "0717234567";
//		//String sVendorPostcode = "PO1 1DF"; // Used in Vehicle Details
//		// Debug Test Data Start   ************ COMMENT I AND OUT AS REQUIRED **********		
//		//------------------------------------------------------------------------------------------
//		// Test Data
//		String sAAMember = "No";
//		String sQuoteType = "Basic";
//		// Test Data
//		//------------------------------------------------------------------------------------------
		// DP Connection
		String sVehicleStatus = Common_Variables.vehicleStatus;
 		String sTitle = Common_Variables.title;
 		String sForename = Common_Variables.foreName;
 		String sSurname = Common_Variables.surName;
 		String sEmail = Common_Variables.eMail;
 		String sPostcode = Common_Variables.postCode;
 		String sPhoneNumber = Common_Variables.phoneNumber;
		String sVehicleType = Common_Variables.vehicleType;
 		String sVehicleReg = Common_Variables.vehicleReg;		
		String sVehicleMake = Common_Variables.vehicleManufacturer;
		String sVehicleModel = Common_Variables.vehicleModel;
		String sVehicleAbicode = Common_Variables.abicode;
		String sVehicleRegYear = Common_Variables.vehicleRegYear;
		String sVehicleNumberofDoors = Common_Variables.vehicleNumberofDoors;
		String sVehicleDoorPlan = Common_Variables.vehicleDoorPlan;
		String sVehicleTransmissionType = Common_Variables.vehicleGears;
		String sVehicleEngineSize = Common_Variables.vehicleEngineSize;
		String sRegistration_Value = Common_Variables.vehicleReg;
		String sVendorName = Common_Variables.vendorName;
		String sVendorPostcode = Common_Variables.vendorPostcode;
		String sAAMember = Common_Variables.membershipYN;
		String sQuoteType = Common_Variables.quoteType;
		// DP Connection
		//------------------------------------------------------------------------------------------

		
		//------------------------------------------------------------------------------------------
		// Capture Quote Summary Details
		//------------------------------------------------------------------------------------------
		// Capture Cost (Discernable TestBox Element
		String sInspectionPrice_Text = (String)html_priceFull().getProperty(".text");		
		logTestResult("Vehicle Inspection Quote Price Is "+sInspectionPrice_Text, true);
		System.out.println("Vehicle Inspection Quote Price IS "+sInspectionPrice_Text);
		logTestResult("The Vehicle ("+sVehicleReg+") is Less Than "+sVehicleStatus+" Years Old ", true);
		System.out.println("The Vehicle ("+sVehicleReg+") is Less Than "+sVehicleStatus+" Years Old");
		//------------------------------------------------------------------------------------------
		// Store for Compare after PL Purchase
		//------------------------------------------------------------------------------------------
		Common_Variables.inspectionQuotePrice = sInspectionPrice_Text;
		//------------------------------------------------------------------------------------------
		// String Data with Embedded Elements
		//List<List<String>> lCheckContains = new ArrayList<List<String>>();
		String [][] sPageElementLookUp = {
			{"Requestor Name",sTitle+" "+sForename+" "+sSurname},
			{"Requestor Email",sEmail},		
			{"Requestor Telephone",sPhoneNumber},
			{"Requestor Postcode",sPostcode},
			{"Vehicle Registration",sVehicleReg},
			{"Vehicle Make",sVehicleMake},
			{"Vehicle Model",sVehicleModel},
			{"Vehicle Registration",sVehicleReg},
			{"Vendor Name",sVendorName},
			{"Vendor Postcode",sVendorPostcode},
		};
		//------------------------------------------------------------------------------------------
		// Capture Remaining Embedded Data and Compare
		String sSummary_Details_Text = (String)html_container().getProperty(".text");
		//------------------------------------------------------------------------------------------
		// Element Name
		for (int i = 0; i < sPageElementLookUp.length; i++) {
		      System.out.print(sPageElementLookUp[i][0] + ": ");
			  //-----------------------------------------------------------------------------------
		      // Element Content
		      for (int j = 1; j < sPageElementLookUp[i].length; j++) {
		    	  //-------------------------------------------------------------------------------
		    	  System.out.print(sPageElementLookUp[i][j]); //  + " "
		    	  //-------------------------------------------------------------------------------
		    	  // Verification
			  		if (sSummary_Details_Text.contains(sPageElementLookUp[i][j])){
						logTestResult("Summary Page Contains "+sPageElementLookUp[i][0] + ": " + sPageElementLookUp[i][j]+" As Expected", true);
					}
			  		else{
						logTestResult("Summary Page DOES NOT Contain "+sPageElementLookUp[i][0] + ": " + sPageElementLookUp[i][j], false);
			  		}
		    	  //-------------------------------------------------------------------------------
		      }
		      System.out.println();			      
		}	
		//------------------------------------------------------------------------------------------  		
		// Terms and Conditions
		checkBox_termson().waitForExistence(5,  0.25);
		checkBox_termson(ANY, READY).click();
		//------------------------------------------------------------------------------------------  		
		// Ready to Pay
		button_ReadyToPay().waitForExistence(5,  0.25);
		button_ReadyToPay(ANY, READY).click();
		try {
			// sleep(0.5);
			button_ReadyToPay(ANY, READY).click();
		} catch (ObjectNotFoundException e) {
			// Button Actioned 1st Time
		}
		//------------------------------------------------------------------------------------------  		
	}
}